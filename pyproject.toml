[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "onc"
version = "2.4.0"
description = "Oceans 3.0 API Python Client Library"
readme = "README.md"
authors = [
    { name = "ONC Data Team", email = "api_support@oceannetworks.ca" },
]
license = { file = 'LICENSE.txt' }
requires-python = ">=3.9"
dependencies = [
    "requests",
    'python-dateutil',
    "humanize",
]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: Apache Software License',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3',
    'Topic :: Scientific/Engineering',
]

[project.urls]
Homepage = "https://data.oceannetworks.ca/OpenAPI"
Documentation = "https://oceannetworkscanada.github.io/api-python-client/"
Source = "https://github.com/OceanNetworksCanada/api-python-client"

[project.optional-dependencies]
dev = [
    "ipykernel",
    "python-dotenv",
    "tox",
    "black",
    "isort",
    "pytest",
    "pytest-cov",
    "ruff",
]

doc = [
    "myst-nb",
    "sphinx-autoapi",
    "sphinx-rtd-theme",
    "sphinx-autobuild",
    "sphinx_copybutton",
    "pandas",
    "python-dotenv",
    "black[jupyter]",
    "ipykernel",
    "tox",
    "jupytext",
]

regression = [
    "jupytext",
    "pytest",
    "python-dotenv",
    "pandas",
]

[tool.isort]
profile = "black"
src_paths = ["onc", "tests"]

[tool.ruff.lint]
# Reference for the rules https://docs.astral.sh/ruff/rules/
select = [
    "E", "W", # pycodestyle
    "F", # pyflakes
    "UP", # pyupgrade
    "B", # flake8-bugbear
    "SIM", # flake8-simplify
]

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
addopts = [
    "--import-mode=importlib",
]
